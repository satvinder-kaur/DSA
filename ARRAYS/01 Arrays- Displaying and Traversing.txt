In java , if we simply try to print an array (like we do in c++) our output will be :
		
		Eg1. int[] arr = new int[]{ 1,2,3,4,5,6,7,8,9,10 }; 
		     System.out.println(arr);   
			 Output : [I@1517365b   //prints the address of the elements
			
		Eg2. String arrStr[]={"Hello","World"};
		     System.out.println(arr);
			 Output : [Ljava.lang.String;@1517365b
			 
		Eg3. float[] arr = new float[]{ 1.5f,2.7f,3.2f };
		     System.out.println(arr);   
			 Output : [F@768debd
			 
		Eg4. double[] arr = new double[]{ 9.5,4.7,22.2 }; 
			 System.out.println(arr);
			 Output : [D@768debd
			 
		Eg5. boolean[] arr = new boolean[]{true,false};
			 System.out.println(arr);
			 Output : [Z@4fccd51b
			 
			 			 
		*Note that In Java, arrays do not overwrite toString().
		 When we try write array directly to output console in Java,
		 we get class_name + ‘@’ + hash_code of the array define by Object.toString(). 
		 
		*To get clas of an array use arrName.getClass(); method
			
	
	
So to avoid this and display our array in meaningful way we use below methods  : 

	I) Print an Array using standard library Arrays
			***import java.util.Arrays;***		
			System.out.println(Arrays.toString(arrayName));    

	II) Print a Multi-dimensional Array
			System.out.println(Arrays.deepToString(array));




Traversing Arrays 

I) One-dimemnsional arrays 
	
	-> For loop:  for (int i=0; i<arr.length ;i++){
					   System.out.println(arr[i]);
				  }
	
	-> For each loop : for(int i:arr){   
                           System.out.println(i);    
					   }

I) Multi-dimemnsional arrays 

	No. of Rows = arr.length;
	No. of Columns = arr[i].length;
	
	-> For loop:   
			Row-major:
					for (int i = 0; i < arr.length; i++) {
						for (int j = 0; j < arr[i].length; j++)
							System.out.print(arr[i][j] + " ");
						System.out.println();
					}
					
			Column major :
					for (int i = 0; i < arr[i].length; i++){
						for (int j = 0; j < arr.length; j++)
							System.out.print(arr[j][i] + " ");
						System.out.println();
					}
	




Extra : Jagged Arrays (GFG : https://www.geeksforgeeks.org/jagged-array-in-java/ )
